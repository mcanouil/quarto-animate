name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: "Version"
        options:
          - "patch"
          - "minor"
          - "major"
        default: "minor"

env:
  MANIFEST: _extensions/animate/_extension.yml

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    env:
      BRANCH: ci/bump-version
      GITHUB_TOKEN: ${{ secrets.github_token }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Bump Version
        id: bump-version
        env:
          GH_TOKEN: ${{ secrets.github_token }}
          COMMIT: "ci: bump version for release :rocket:"
        shell: bash
        run: |
          git config --local user.name github-actions[bot]
          git config --local user.email 41898282+github-actions[bot]@users.noreply.github.com
          if git show-ref --quiet refs/heads/${BRANCH}; then
            echo "Branch ${BRANCH} already exists."
            git branch -D "${BRANCH}"
            git push origin --delete "${BRANCH}"
          fi
          git checkout -b "${BRANCH}"

          DATE=$(date +%Y-%m-%d)
          CURRENT_VERSION=$(grep "^version:" "${MANIFEST}" | sed 's/version: //;s/"//g')
          MAJOR=$(echo ${CURRENT_VERSION} | cut -d. -f1)
          MINOR=$(echo ${CURRENT_VERSION} | cut -d. -f2)
          PATCH=$(echo ${CURRENT_VERSION} | cut -d. -f3)

          case "${{ github.event.inputs.version }}" in
            "major")
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            "minor")
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            *)
              PATCH=$((PATCH + 1))
              ;;
          esac

          VERSION="${MAJOR}.${MINOR}.${PATCH}"
          sed -i "s/^version:.*/version: ${VERSION}/" "${MANIFEST}"
          sed -i "s/^version:.*/version: ${VERSION}/" CITATION.cff
          sed -i "s/^date-released:.*/date-released: \"${DATE}\"/" CITATION.cff
          git add CITATION.cff || echo "No changes to add"
          git commit -m "${COMMIT}" || echo "No changes to commit"
          git push --force origin ${BRANCH} || echo "No changes to push"

      - name: Create Pull Request
        shell: bash
        run: |
          sleep 20
          gh pr create --fill-first --base "main" --head "${BRANCH}" --label "Type: CI/CD :robot:"

      - name: Merge Pull Request
        shell: bash
        run: |
          sleep 20
          gh pr merge --auto --squash --delete-branch
          sleep 10

  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update branch
        run: |
          git fetch --all
          git checkout main
          git pull origin main

      - name: Release extension on GitHub
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        shell: bash
        run: |
          VERSION=$(grep "^version:" CITATION.cff | sed 's/version: //;s/"//g')
          gh release create ${VERSION} --title ${VERSION} --generate-notes
